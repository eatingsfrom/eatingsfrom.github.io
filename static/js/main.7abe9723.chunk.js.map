{"version":3,"sources":["images/about-us.jpg","Recipes.js","RecipePage.js","About.js","Home.js","LocationPage.js","Header.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Recipies","props","state","data","loaded","localStorage","getItem","Tabletop","init","key","callback","googleData","datadict","forEach","recipe","title","setItem","JSON","stringify","setState","simpleSheet","name","this","history","push","pathname","Object","keys","map","recipename","React","cloneElement","onClick","goToRecipePage","className","renderRecipes","Component","RecipePage","location","console","log","recipequery","match","params","cacheHit","parse","ingredients","split","value","to","Grid","stackable","columns","divided","Column","url","instalink","maxWidth","hideCaption","protocol","injectScript","time","yield","renderIngredients","dangerouslySetInnerHTML","__html","html","About","href","target","src","aboutimg","Home","Image","newyorkcity","description","places","iglink","pittsburgh","losangeles","LocationPage","locdata","style","fontSize","align","renderPlaces","NavBar","changeTab","selected","Header","tab","Icon","bind","Footer","Divider","section","size","App","path","exact","component","Recipes","render","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7abe9723.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about-us.de7871ed.jpg\";","//Recipies.js\nimport React, { Component } from 'react';\nimport Tabletop from \"tabletop\";\n\nimport './App.css';\nimport './Recipes.css';\n\nclass Recipies extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      loaded: false,\n    };\n  }\n  componentDidMount() {\n    const cacheHit = localStorage.getItem(\"eatingsfromdata\");\n    // if (cacheHit) {\n    //   console.log(cacheHit)\n    //   this.setState({data: JSON.parse(cacheHit), loaded: true});\n    //   // this.setState({ hits: JSON.parse(cachedHits) });\n    // } else {\n      Tabletop.init({\n        key: '1XhfCz5Q7kX-N-GwMgU0WGEOVKSiqJn0aDL95IZgm_5I',\n        callback: googleData => {\n          // console.log('recipes: google sheet data --->', googleData);\n          var datadict = {}\n          googleData.forEach(recipe => {\n            datadict[recipe.title] = recipe\n          })\n          localStorage.setItem(\"eatingsfromdata\", JSON.stringify(datadict));\n          this.setState({data: datadict, loaded: true});\n          \n        },\n        simpleSheet: true\n      })\n    // }\n  }\n  goToRecipePage(name) {\n    // this.props.history.push(\"/company/\" + index);\n    this.props.history.push({\n      pathname: '/recipes/' + name,\n      state: {\n        data: this.state.data[name]\n      }\n    })\n  }\n  renderRecipes() {\n    return Object.keys(this.state.data).map((recipename) =>\n        React.cloneElement(\n          <div>\n            <a onClick={() => this.goToRecipePage(recipename)}>{recipename}</a>\n          </div>\n          , { key: recipename })\n      );\n  }\n  render() {\n    if (this.state.loaded){\n      return (\n        <div className=\"recipes\">\n          <h1>recipes</h1>\n          {this.renderRecipes()}\n        </div>\n      );\n    } else {\n      return (\n        <div>Loading...</div>\n      )\n    }\n  }\n}\n\nexport default Recipies;\n","//RecipePage.js\nimport React, { Component } from 'react';\nimport InstagramEmbed from 'react-instagram-embed';\nimport Tabletop from \"tabletop\";\nimport { Redirect } from \"react-router-dom\";\nimport { Grid } from 'semantic-ui-react';\n\nimport './Recipes.css';\n\nclass RecipePage extends Component{\n  constructor(props) {\n    super(props);\n    var data = (props.location.state ? props.location.state.data : null);\n    console.log(data)\n    console.log(data ? true: false)\n    this.state = {\n      recipe: data,\n      loaded: (data ? 1 : 0)\n    };\n  }\n  componentDidMount() {\n    var recipequery = this.props.match.params.name;\n    if (!this.state.recipe) {\n      const cacheHit = localStorage.getItem(\"eatingsfromdata\");\n      if (cacheHit) {\n        // console.log(cacheHit)\n        var data = JSON.parse(cacheHit)\n        if (recipequery in data) {\n          this.setState({recipe: data[recipequery], loaded: 1});\n        } else {\n          this.setState({loaded: -1})\n        }\n      } else {\n        Tabletop.init({\n          key: '1XhfCz5Q7kX-N-GwMgU0WGEOVKSiqJn0aDL95IZgm_5I',\n          callback: googleData => {\n            // console.log('recipe page: google sheet data --->', googleData);\n            var datadict = {}\n            googleData.forEach(recipe => {\n              datadict[recipe.title] = recipe\n            })\n            localStorage.setItem(\"eatingsfromdata\", JSON.stringify(datadict));\n            if (recipequery in datadict) {\n              this.setState({recipe: datadict[this.props.match.params.name], loaded: 1});\n            } else {\n              this.setState({loaded: -1})\n            }\n          },\n          simpleSheet: true\n        })\n      }\n    }\n  }\n\n  renderIngredients() {\n    if (this.state.recipe.ingredients != null) {\n      var ingredientsarr = this.state.recipe.ingredients.split(\"; \");\n      return ingredientsarr.map((value) => \n        React.cloneElement(\n          <li>{value}</li>\n      , {key: value}))\n    }\n  }\n\n  render() {\n    switch (this.state.loaded){\n      case -1: \n        return (<Redirect to=\"/recipes\" />);\n      case 1: \n        return (\n          <div className=\"recipepage\">\n              <div className=\"recipebody\">\n              <Grid  stackable columns={2} divided='vertically'>\n                <Grid.Column className=\"item\"> \n                  <div className=\"recipeimg\">\n                    <InstagramEmbed\n                    url={this.state.recipe.instalink}\n                    maxWidth={430}\n                    hideCaption={true}\n                    // containerTagName='div'\n                    protocol=''\n                    injectScript\n                    />\n                  </div>\n                </Grid.Column>\n                <Grid.Column className=\"item recipetext-right\">\n                  <div className=\"recipetitle center\">{this.state.recipe.title}</div>\n                  <div className=\"recipeinfo center\">\n                    Total time: {this.state.recipe.time}<br></br>\n                    Yield: {this.state.recipe.yield}\n                  </div>\n              \n                  <div className=\"recipeingredients\">\n                    <h1 className=\"center\" >Ingredients</h1>\n                    <ul>{this.renderIngredients()}</ul>\n                  </div>\n                </Grid.Column>\n              </Grid>\n                \n                <div className=\"recipetext\" >\n                  <h1 className=\"center\">Directions</h1>\n                  <div dangerouslySetInnerHTML={{__html: this.state.recipe.html}}></div>\n                </div>\n              </div>\n          </div>\n        );\n      default: \n        return (\n          <div className=\"recipepage\">loading...</div>\n        )\n    }\n  }\n}\n\nexport default RecipePage;\n","//About.js\nimport React, { Component } from 'react';\nimport './App.css';\nimport aboutimg from './images/about-us.jpg'\nimport './About.css';\n\nclass About extends Component{\n    \n  render() {\n    return (\n      <div className=\"about\">\n        <div className=\"about-content\">\n          <div className=\"about-blurb\">\n            gr-eatings! <br/> we’re megan and kimberly, avid foodies based in pittsburgh <br/> check out our instagram <a href=\"http://instagram.com/eatingsfrom\" target=\"_blank\" >@eatingsfrom</a> for our most recent noms ♥\n          </div>\n          <img src={aboutimg}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","//Home.js\nimport React, { Component } from 'react';\nimport { Grid, Image } from 'semantic-ui-react';\nimport './App.css';\nimport InstagramEmbed from 'react-instagram-embed';\nimport { Link } from \"react-router-dom\";\n\nclass Home extends Component{\n\n  goToDestinationPage(name) {\n    this.props.history.push(\"/destination/\" + name);\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"feature\">\n          <Grid  stackable columns={3} divided='vertically'>\n              <Grid.Column className=\"item\"> \n                <Link to=\"/destination/newyorkcity\">\n                  <Image src='/images/home/nyc.png' />\n                  <div className=\"item-text\">NEW <br/> YORK <br/> CITY</div>\n                </Link>\n              </Grid.Column>\n              <Grid.Column className=\"item\">\n                <Link to=\"/destination/pittsburgh\">\n                  <Image src='/images/home/pgh.jpg' />\n                  <div className=\"item-text\">PITTSBURGH</div>\n                </Link>\n              </Grid.Column>\n              <Grid.Column className=\"item\">\n              <Link to=\"/destination/losangeles\">\n                <Image src='/images/home/la.png' />\n                <div className=\"item-text\">LOS <br/> ANGELES</div>\n              </Link>\n            </Grid.Column>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","//RecipePage.js\nimport React, { Component } from 'react';\nimport InstagramEmbed from 'react-instagram-embed';\nimport Tabletop from \"tabletop\";\nimport { Redirect } from \"react-router-dom\";\nimport { Grid } from 'semantic-ui-react';\n\nimport './Recipes.css';\nimport './LocationPage.css'\n\nconst data = {\n  newyorkcity: {\n    title: \"New York City\",\n    description: \"Here are some of my favorite places in the city!\",\n    places: [\n      {\n        name: \"Ootoya\", \n        iglink: \"https://www.instagram.com/p/Bxuyrz1Fvsc/\", \n        description: \"Dining here feels like an authentic Japanese restuarant! Their tofu is made in house and the overall quality of food is amazing.\"\n      },\n      {\n        name: \"Lady M\",\n        iglink: \"https://www.instagram.com/p/BslqD1pA3OB/\",\n        description: \"Their crepe cakes are just the absolute best in the city- although a bit expensive, it is definitely worth the try at least once!\"\n      },\n      {\n        name: \"Luke's Lobster\",\n        iglink: \"https://www.instagram.com/p/B8Jve1lBtdb/\",\n        description: \"My favorite place to grab lobster rolls and clam chowder soup- it's the ultimate comfort food!\"\n      },\n      {\n        name: \"Cha-An\",\n        iglink: \"https://www.instagram.com/p/B7roP90hnjZ/\",\n        description: \"This teahouse and dessert place is very cute and has beautiful and delicious Japanese desserts.\"\n      },\n      {\n        name: \"K-town food gallery\",\n        iglink: \"https://www.instagram.com/p/Bsi53NOAxT1/\",\n        description: \"The food court styled dining halls are the best place to get a quick taste of K-town in nyc!\"\n      },\n      {\n        name: \"Taiyaki\",\n        iglink: \"https://www.instagram.com/p/BXj2NISgIrH/\",\n        description: \"A popular twist on the classic Japanese Taiyaki red bean fish snacks with the addition of ice cream!\"\n      },\n      {\n        name: \"Momoya\",\n        iglink: \"https://www.instagram.com/p/B-fDFv-Ds6b/\",\n        description: \"Equisite Japanese food here, from katsudon to delicious sushi!\"\n      }\n    ]\n  },\n  pittsburgh: {\n    title: \"Pittsburgh\",\n    description: \"Here are some of my favorite places in the city!\",\n    places: [\n      {\n        name: \"Fuku Tea\", \n        iglink: \"https://www.instagram.com/p/B-4_-YrjW1x/\", \n        description: \"The boba scene is sparse in this area, and Fuku shines as the star here!!\"\n      },\n      {\n        name: \"Gaucho Parrilla Argentina\", \n        iglink: \"https://www.instagram.com/p/B6cTlWXBYOG/\", \n        description: \"Mouthwatering Argentinian cuisine with juicy meats like rosemary braised beef and carne.\"\n      },\n      {\n        name: \"Meat & Potatoes\", \n        iglink: \"https://www.instagram.com/p/B58tdO1BUIs/\", \n        description: \"Great pick for a fancier meal, everything from the mac and cheese to the steak is scrumptious.\"\n      },\n      {\n        name: \"Noodlehead\", \n        iglink: \"https://www.instagram.com/p/Bxae3EaF-Ze/\", \n        description: \"Classic Pittsburgh eat - find Thai food staples like Pad Thai, Sukothai Noodle Soup, and more.\"\n      },\n      {\n        name: \"The Porch\", \n        iglink: \"https://www.instagram.com/p/B6G3VBgByh8/\", \n        description: \"Brunch time means Porch time - don't miss out on their delicious roasted potatoes!\"\n      }\n    ]\n  },\n  losangeles: {\n    title: \"Los Angeles\",\n    description: \"Here are some of my favorite places in the city!\",\n    places: [\n      {\n        name: \"Marugame Udon\",\n        iglink: \"https://www.instagram.com/p/B9PMtfDhAIw/\",\n        description: \"Delicious broth with chewy udon noodles, perfected with a side of shrimp or veggie tempura.\"\n      },\n      {\n        name: \"Menya Hanabi\", \n        iglink: \"https://www.instagram.com/p/B7mLG-yhNsp/\", \n        description: \"Known for their mazesoba, or dry ramen! Full of flavor and can be topped with chasu, curry, and more.\"\n      },\n      {\n        name: \"Kokumi\",\n        iglink: \"https://www.instagram.com/p/B8FJUWNnuqZ/\",\n        description: \"Love their shabu shabu, especially the wagyu beef toro and steak cuts.\"\n      },\n      {\n        name: \"Sip Matcha\",\n        iglink: \"https://www.instagram.com/p/B8b5Pqxht4v/\",\n        description: \"Their healthy approach to drinks is super refreshing like the Magic Matcha layering beet, tumeric, and matcha.\"\n      },\n      {\n        name: \"Somi Somi\",\n        iglink: \"https://www.instagram.com/p/B-kVp2VDtIv/\",\n        description: \"Soft serve with taiyaki, or Japanese fish-shaped cake, is an adorable dessert that's the signature pick.\"\n      },\n    ]\n  },\n}\n\nclass LocationPage extends Component{\n  constructor(props) {\n    super(props);\n    var locdata = data[this.props.match.params.name]\n    //TODO: ADD AN ERROR PAGE for path that doesn't match\n    this.state = {\n      data: locdata,\n      loaded: (locdata ? 1 : 0)\n    };\n  }\n  componentDidMount() {\n    // var recipequery = this.props.match.params.name;\n    // if (!this.state.recipe) {\n    //   const cacheHit = localStorage.getItem(\"eatingsfromdata\");\n    //   if (cacheHit) {\n    //     console.log(cacheHit)\n    //     var data = JSON.parse(cacheHit)\n    //     if (recipequery in data) {\n    //       this.setState({recipe: data[recipequery], loaded: 1});\n    //     } else {\n    //       this.setState({loaded: -1})\n    //     }\n    //   } else {\n    //     console.log(\"getting data\")\n    //     Tabletop.init({\n    //       key: '1XhfCz5Q7kX-N-GwMgU0WGEOVKSiqJn0aDL95IZgm_5I',\n    //       callback: googleData => {\n    //         console.log('recipe page: google sheet data --->', googleData);\n    //         var datadict = {}\n    //         googleData.forEach(recipe => {\n    //           datadict[recipe.title] = recipe\n    //         })\n    //         localStorage.setItem(\"eatingsfromdata\", JSON.stringify(datadict));\n    //         if (recipequery in datadict) {\n    //           this.setState({recipe: datadict[this.props.match.params.name], loaded: 1});\n    //         } else {\n    //           this.setState({loaded: -1})\n    //         }\n    //       },\n    //       simpleSheet: true\n    //     })\n    //   }\n    // }\n  }\n\n  renderPlaces() {\n    if (this.state.data.places != null) {\n      return (this.state.data.places).map((value) => \n        React.cloneElement(\n          <div className=\"entry\">\n            <h2>♥ {value.name} ♥</h2>\n            <p style={{ fontSize: 20}}>{value.description}</p>\n            <div align=\"center\">\n              <InstagramEmbed\n                url={value.iglink}\n                maxWidth={430}\n                hideCaption={true}\n                // containerTagName='div'\n                protocol=''\n                injectScript\n                />\n            </div>\n          </div>\n      , {key: value.name}))\n    }\n  }\n\n  render() {\n    switch (this.state.loaded){\n      case -1: \n        return (<Redirect to=\"/\" />);\n      case 1: \n        return (\n          <div className=\"locationpage\">\n            <h1>{this.state.data.title}</h1>\n            <h4>{this.state.data.description}</h4>\n            {this.renderPlaces()}\n          </div>\n        );\n      default: \n        return (\n          <div className=\"locationpage\">loading...</div>\n        )\n    }\n  }\n}\n\nexport default LocationPage;\n","//Header.js\nimport React, { Component } from 'react';\nimport './App.css';\nimport './Header.css';\nimport { Link } from \"react-router-dom\";\nimport { Icon } from 'semantic-ui-react';\n\nclass NavBar extends Component{\n  constructor(props) {\n    super(props); \n  }\n  \n  render(){\n      return (\n          <nav>\n            <Link to='/about' onClick={() => this.props.changeTab(1)} className={this.props.selected === 1 ? 'current-tab' : null}>ABOUT</Link>\n            <Link to='/recipes' onClick={() => this.props.changeTab(2)} className={this.props.selected === 2 ? 'current-tab' : null}>RECIPES</Link>\n          </nav>\n      );\n  }\n}\nclass Header extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 0\n    }\n  }\n\n  changeTab(tab){\n    this.setState({ selected: tab });\n  }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <img src=\"/logo_color.png\"/><h1 className=\"title\"><Link to=\"/\" onClick={() => this.changeTab(0)}>EATINGS FROM</Link></h1>\n        <div className=\"navgroup\"><a href=\"https://instagram.com/eatingsfrom\" target=\"__blank\" ><Icon name='instagram' /></a>\n        <NavBar selected={this.state.selected} changeTab={this.changeTab.bind(this)}/></div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","//Footer.js\nimport React, { Component } from 'react';\nimport './App.css';\nimport './Footer.css';\nimport { Link } from \"react-router-dom\";\nimport { Divider, Icon } from 'semantic-ui-react';\n\nclass Footer extends Component{\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"footer\">\n        <Divider section />\n        <div className=\"contactus\">\n            <a href=\"mailto:eatingsfrom@gmail.com\" >\n                <Icon size=\"\" name=\"mail outline\" />\n            </a>\n            <a href=\"https://instagram.com/eatingsfrom\" target=\"__blank\" >\n                <Icon size=\"\" name=\"instagram\" />\n            </a>\n        </div>\n        <div className=\"copyright\">Copyright © 2020, eatingsfrom</div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport Recipes from './Recipes';\nimport RecipePage from './RecipePage';\nimport About from './About';\nimport Home from './Home';\nimport LocationPage from './LocationPage';\nimport Header from './Header';\nimport Footer from './Footer';\nimport './App.css';\nimport {\n  Route,\n  Switch,\n  Redirect,\n  BrowserRouter as Router\n} from \"react-router-dom\";\nfunction App() {\n  return (\n      <Router>\n        <div className=\"App\">\n\n        <Header/>\n        <div className=\"content\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/destination/:name\" component={(props) => <LocationPage {...props} />} />\n            <Route path=\"/recipes\" exact component={Recipes} />\n            <Route path=\"/recipes/:name\" component={(props) => <RecipePage {...props} />} />\n\n            <Route render={() => <Redirect to=\"/\" />} />\n          </Switch>\n        </div>\n        <Footer />\n    </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}